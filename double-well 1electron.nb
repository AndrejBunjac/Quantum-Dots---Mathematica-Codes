(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    196094,       3884]
NotebookOptionsPosition[    194110,       3822]
NotebookOutlinePosition[    194453,       3837]
CellTagsIndexPosition[    194410,       3834]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"om", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{".5", 
    RowBox[{"om", "^", "2"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"z", "^", "2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "/", "2"}], ")"}], "^", "2"}]}], ")"}], "^", "2"}], 
     "/", 
     RowBox[{"d", "^", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vho1", "=", 
   RowBox[{".5", 
    RowBox[{"om", "^", "2"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"z", "+", 
       RowBox[{"d", "/", "2"}]}], ")"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DV1", "=", 
   RowBox[{"V", "-", "Vho1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"om", "/", "Pi"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "om"}], " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "+", 
          RowBox[{"d", "/", "2"}]}], ")"}], "^", "2"}], "/", "2"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gv", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"V", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "d"}], ",", "d"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gv1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"V1", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "d"}], ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gphi1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"phi1", "+", 
      RowBox[{"om", "/", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "d"}], ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E01", "=", 
   RowBox[{"om", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gv", ",", "gv1", ",", "gphi1", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", "Vb"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7613794658786554`*^9, 3.7613795766700697`*^9}, {
   3.7613796076315155`*^9, 3.7613796138804893`*^9}, {3.7613796487975388`*^9, 
   3.76137967411971*^9}, {3.761379760947174*^9, 3.7613799559218884`*^9}, {
   3.761380059499872*^9, 3.761380074545871*^9}, {3.7613801358439627`*^9, 
   3.761380188659218*^9}, {3.7613802241826334`*^9, 3.761380237195156*^9}, {
   3.761380328313795*^9, 3.761380571386449*^9}, 3.7613806935881987`*^9, {
   3.76138082613993*^9, 3.7613810375703974`*^9}, {3.761381085449768*^9, 
   3.7613810942290034`*^9}, {3.7613887090385847`*^9, 3.761388709085927*^9}, {
   3.761388751802966*^9, 3.7613887567283134`*^9}, {3.76138907599146*^9, 
   3.7613891017354107`*^9}, {3.761389138903612*^9, 3.7613892051853533`*^9}, {
   3.7626804996179047`*^9, 3.76268050422379*^9}, {3.762680547165183*^9, 
   3.7626806443833313`*^9}, {3.762680683694002*^9, 3.762680774774063*^9}, {
   3.762680813037458*^9, 3.762680924867407*^9}, {3.7626810121293993`*^9, 
   3.762681074535821*^9}, {3.7626811058361382`*^9, 3.762681208357833*^9}, {
   3.762681470584979*^9, 3.7626815143606977`*^9}, {3.76268222214152*^9, 
   3.7626822308739166`*^9}, {3.7626823379137497`*^9, 3.762682421609124*^9}, {
   3.7626824570788507`*^9, 3.7626824824113054`*^9}, {3.762682527233021*^9, 
   3.7626825277641563`*^9}, {3.76268284962874*^9, 3.7626828840657134`*^9}, {
   3.762683009429085*^9, 3.76268313654241*^9}, 3.762683175041707*^9, {
   3.7627818129849434`*^9, 3.7627818135830936`*^9}, {3.7627950948878675`*^9, 
   3.7627950950440807`*^9}, {3.7628427937779236`*^9, 
   3.7628427939147673`*^9}, {3.762931207224229*^9, 3.7629312424254327`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
9v//If8Ddzw19A==
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
///++D8pW7r4
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{0, 
     Rational[49, 16]}, {0, 3.0625}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.761380502980195*^9, 3.761380572104581*^9}, 
   3.7613809877131233`*^9, {3.7613810218865833`*^9, 3.761381038398363*^9}, {
   3.7613810859340577`*^9, 3.7613810946038585`*^9}, 3.7613887095228095`*^9, 
   3.7613887572438116`*^9, {3.761389091300308*^9, 3.761389102063401*^9}, {
   3.761389144417906*^9, 3.7613892061533957`*^9}, {3.7626806071001024`*^9, 
   3.7626806139391375`*^9}, 3.7626806461498203`*^9, {3.762680747633162*^9, 
   3.762680775721545*^9}, {3.7626808135937505`*^9, 3.7626808566945605`*^9}, {
   3.762680899629691*^9, 3.7626809251756997`*^9}, {3.762681017313222*^9, 
   3.7626810260160913`*^9}, 3.7626810774775853`*^9, 3.762681149081036*^9, {
   3.7626811837016325`*^9, 3.7626812123449564`*^9}, {3.7626824015982213`*^9, 
   3.7626824223901863`*^9}, {3.7626824785054855`*^9, 3.7626824831450157`*^9}, 
   3.762682528716999*^9, 3.7626828526436434`*^9, 3.762682884659272*^9, {
   3.7626830298197327`*^9, 3.7626830389738207`*^9}, 3.762683074646804*^9, {
   3.762683109201182*^9, 3.7626831374328265`*^9}, 3.762683175760229*^9, 
   3.7627815905412493`*^9, 3.762781814546342*^9, 3.7627866380202637`*^9, 
   3.7627924591145287`*^9, 3.7627930883183165`*^9, 3.762795096277703*^9, 
   3.7628427960556955`*^9, 3.76284797471875*^9, 3.7629281717185936`*^9, 
   3.762931243332964*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Calc", ".", " ", "of"}], " ", "the", " ", "lowest", " ", 
    "energy", " ", "levels", " ", "by", " ", "diagonalizing", " ", "Hmat", 
    " ", "in", " ", "the", " ", "single", " ", "well", " ", "basis", " ", 
    RowBox[{"(", 
     RowBox[{"approx", "."}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"z", "^", "2"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "/", "2"}], ")"}], "^", "2"}]}], ")"}], "^", "2"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"d", "^", "2"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vho", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "+", 
          RowBox[{"d", "/", "2"}]}], ")"}], "^", "2"}], "/", "2"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DV", "=", 
     RowBox[{"V", "-", "Vho"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"nmax", "=", "10"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hmat", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "=", 
         RowBox[{"i", "-", "1"}]}], ";", 
        RowBox[{"n", "=", 
         RowBox[{"j", "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"phiL", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"om", "/", "Pi"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "om"}], " ", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"z", "+", 
                RowBox[{"d", "/", "2"}]}], ")"}], "^", "2"}], "/", "2"}]}], 
           "]"}], 
          RowBox[{
           RowBox[{"HermiteH", "[", 
            RowBox[{"m", ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", "om", "]"}], 
              RowBox[{"(", 
               RowBox[{"z", "+", 
                RowBox[{"d", "/", "2"}]}], ")"}]}]}], "]"}], "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"2", "^", "m"}], " ", 
             RowBox[{"m", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"phiR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"om", "/", "Pi"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "om"}], " ", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"z", "+", 
                RowBox[{"d", "/", "2"}]}], ")"}], "^", "2"}], "/", "2"}]}], 
           "]"}], 
          RowBox[{
           RowBox[{"HermiteH", "[", 
            RowBox[{"n", ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", "om", "]"}], 
              RowBox[{"(", 
               RowBox[{"z", "+", 
                RowBox[{"d", "/", "2"}]}], ")"}]}]}], "]"}], "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"2", "^", "n"}], " ", 
             RowBox[{"n", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"E0", "=", 
         RowBox[{"om", 
          RowBox[{"(", 
           RowBox[{"n", "+", 
            RowBox[{"1", "/", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Vmn", "=", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"phiL", " ", "DV", " ", "phiR"}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", 
             RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Hmat", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
         RowBox[{"Vmn", "+", 
          RowBox[{"E0", " ", 
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"m", ",", "n"}], "]"}]}]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Ei", " ", "=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Eigenvalues", "[", "Hmat", "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7627814539453344`*^9, 3.7627815714327736`*^9}, {
  3.762781627067726*^9, 3.762781627132041*^9}, {3.762781703991349*^9, 
  3.762781720309266*^9}, {3.7627818646680517`*^9, 3.7627818752847757`*^9}, {
  3.7627819077248898`*^9, 3.762781916671931*^9}, {3.7627819474628673`*^9, 
  3.7627819475532413`*^9}, {3.7627870481695004`*^9, 3.762787050840746*^9}, {
  3.7627936146922398`*^9, 3.762793614798814*^9}, {3.7628424586242523`*^9, 
  3.7628424657374544`*^9}, {3.762842831548386*^9, 3.762842831629196*^9}, {
  3.7628538085625*^9, 3.76285380865625*^9}, {3.762854726953125*^9, 
  3.762854793421875*^9}, {3.7628561580625*^9, 3.762856166796875*^9}, {
  3.7629313035035577`*^9, 3.762931343189516*^9}, {3.762931378325886*^9, 
  3.7629314672049847`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.7627816030534487`*^9, 3.762781628717574*^9}, {
   3.76278170451929*^9, 3.762781720650844*^9}, {3.7627818651792*^9, 
   3.762781875601858*^9}, {3.7627819087224283`*^9, 3.762781917061556*^9}, 
   3.7627819482666616`*^9, 3.762786650709735*^9, 3.762792469938834*^9, 
   3.7627931031211634`*^9, 3.762793615217597*^9, 3.762795111414278*^9, {
   3.762842814456541*^9, 3.7628428327096286`*^9}, 3.762853808953125*^9, 
   3.762854794328125*^9, {3.762931305306612*^9, 3.762931344438272*^9}, 
   3.762931471709752*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-5.3216086797886435`\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(6.93890258930366`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.711735392817831`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.762854794453125*^9, {3.762931305450039*^9, 3.76293134458031*^9}, 
   3.762931471840781*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-5.3216086797886435`\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(-1.3010426069826053`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(8.819391933389319`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.762854794453125*^9, {3.762931305450039*^9, 3.76293134458031*^9}, 
   3.762931471899274*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-5.09581555184188`\\)}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-1.4745149080513766`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(9.911556322813536`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.762854794453125*^9, {3.762931305450039*^9, 3.76293134458031*^9}, 
   3.762931471954003*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.762854794453125*^9, {3.762931305450039*^9, 3.76293134458031*^9}, 
   3.76293147197583*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.47718114669575484`", ",", "1.310463782217669`", ",", 
   "1.9192220030385467`", ",", "2.598418881614625`", ",", 
   "3.5016704928723814`", ",", "4.582846518945304`", ",", "5.86309953667793`",
    ",", "7.227658402001075`", ",", "8.841106067922441`", ",", 
   "11.979440254861142`", ",", "19.017770464218312`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7627816030534487`*^9, 3.762781628717574*^9}, {
   3.76278170451929*^9, 3.762781720650844*^9}, {3.7627818651792*^9, 
   3.762781875601858*^9}, {3.7627819087224283`*^9, 3.762781917061556*^9}, 
   3.7627819482666616`*^9, 3.762786650709735*^9, 3.762792469938834*^9, 
   3.7627931031211634`*^9, 3.762793615217597*^9, 3.762795111414278*^9, {
   3.762842814456541*^9, 3.7628428327096286`*^9}, 3.762853808953125*^9, 
   3.762854794328125*^9, {3.762931305306612*^9, 3.762931344438272*^9}, 
   3.7629314752749405`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Calc", ".", " ", "of"}], " ", "the", " ", "lowest", " ", 
     "energy", " ", "levels", " ", "by", " ", "diagonalizing", " ", "Hmat", 
     " ", "in", " ", "the", " ", "double"}], "-", 
    RowBox[{"well", " ", "basis"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"z", "^", "2"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "/", "2"}], ")"}], "^", "2"}]}], ")"}], "^", "2"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"d", "^", "2"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z1", "=", 
     RowBox[{
      RowBox[{"d", "/", "2"}], "+", "z"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z2", "=", 
     RowBox[{
      RowBox[{"d", "/", "2"}], "-", "z"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vho1", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{"z1", "^", "2"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vho2", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{"z2", "^", "2"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DV1", "=", 
     RowBox[{"V", "-", "Vho1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DV2", "=", 
     RowBox[{"V", "-", "Vho2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"nmax", "=", "10"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hmat", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"2", "nmax"}], "+", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"2", "nmax"}], "+", "2"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Smat", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"2", "nmax"}], "+", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"2", "nmax"}], "+", "2"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"j", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "=", 
          RowBox[{"i", "-", "1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi1L", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z1", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"m", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z1"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "m"}], " ", 
              RowBox[{"m", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi1R", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z1", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"n", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z1"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", 
              RowBox[{"n", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi2L", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z2", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"m", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z2"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "m"}], " ", 
              RowBox[{"m", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi2R", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z2", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"n", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z2"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", 
              RowBox[{"n", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"E0", "=", 
          RowBox[{"om", 
           RowBox[{"(", 
            RowBox[{"n", "+", 
             RowBox[{"1", "/", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn1", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi1L", " ", "DV1", " ", "phi1R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn12", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi1L", " ", "DV2", " ", "phi2R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn21", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi2L", " ", "DV1", " ", "phi1R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn2", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi2L", " ", "DV2", " ", "phi2R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Smn1", "=", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"m", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Smn12", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi1L", " ", "phi2R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Smn21", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi2L", " ", "phi1R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Smn2", "=", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"m", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Hmat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{"Vmn1", "+", 
           RowBox[{"E0", " ", 
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"m", ",", "n"}], "]"}]}]}]}], " ", ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Hmat", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "nmax", "+", "1"}], ",", "j"}], "]"}], "]"}], 
          "=", 
          RowBox[{"Vmn21", "+", 
           RowBox[{"E0", " ", "Smn21"}]}]}], " ", ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Hmat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", 
             RowBox[{"j", "+", "nmax", "+", "1"}]}], "]"}], "]"}], "=", 
          RowBox[{"Vmn12", "+", 
           RowBox[{"E0", " ", "Smn12"}]}]}], " ", ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Hmat", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "nmax", "+", "1"}], ",", 
             RowBox[{"j", "+", "nmax", "+", "1"}]}], "]"}], "]"}], "=", 
          RowBox[{"Vmn2", "+", 
           RowBox[{"E0", " ", 
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"m", ",", "n"}], "]"}]}]}]}], " ", ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Smat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "Smn1"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Smat", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "nmax", "+", "1"}], ",", "j"}], "]"}], "]"}], 
          "=", "Smn21"}], " ", ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Smat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", 
             RowBox[{"j", "+", "nmax", "+", "1"}]}], "]"}], "]"}], "=", 
          "Smn12"}], " ", ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Smat", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "nmax", "+", "1"}], ",", 
             RowBox[{"j", "+", "nmax", "+", "1"}]}], "]"}], "]"}], "=", 
          "Smn2"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Ei", " ", "=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"{", 
       RowBox[{"Hmat", ",", "Smat"}], "}"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwtyl1Ik2EYxvFHW4SNd5tuJYsWSAimgg4H2yhJ0YMVSsMdyIhyGp0IWQl2
0oS3ECuHMIQJztxMjAWByGJ+YR+zMYc5camzBuJHGKh1EHQ0Anvv53oPHn78
r+cuarvfdDeXMWaUHpn2+zqFvF+1/o5bbnL1vfUJOVCmGyA9Ew1BcvJPmls9
qw2T2f7Wd+TU+tYMabu4lCDrw0KSNFomV8nebCxN6vJD38l7mZ875PiL1/vk
fFXqgGzvtB6SDVc7/pJvHzrUKsmE8qSe9Oh/nyeZ+KpYw31TDktN8EwNl61f
h303YLcD/yJkg81onxP91Y1ek/3YD5dlIyHcecPoz3NwIordnkRrUtC0Ac2y
NzO4q9yCtbvY62Tt/2DPMRxX5HOvneKyXQH9Q/ZQi71RB3POYVdAFimBs1B0
firgPluBF7LwEmSbxzADxZeCltul5rKVQnRKNl6E/Zvs7QrsCiPacBmaoWhz
QosL+94jdG43PDqr47bqyd7CoQdmyZ7ABtfrGomQz0uCXK33dJTc+aDkjulj
X8h0eZy79FTwWSRr7hi4y8mFYVLV8jhANkZHpknFiW1uwpO5YpUcjS1Wk/8B
6wUc2w==
  "]],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{
  3.76284284920648*^9, 3.7628428890193624`*^9, {3.7628430284724264`*^9, 
   3.7628430354170694`*^9}, 3.762843093883272*^9, 3.7628433495536385`*^9, 
   3.762843406959203*^9, {3.7628434387926273`*^9, 3.762843474817773*^9}, {
   3.76284364388848*^9, 3.762843666035371*^9}, {3.7628437482301297`*^9, 
   3.7628437714954166`*^9}, {3.7628438704374094`*^9, 3.7628438803138046`*^9}, 
   3.762847983703125*^9, {3.762848382625*^9, 3.7628484124375*^9}, {
   3.76284844759375*^9, 3.762848461078125*^9}, 3.7628487438125*^9, 
   3.762848879046875*^9, {3.762849086203125*^9, 3.7628491225625*^9}, {
   3.762849239640625*^9, 3.762849295375*^9}, {3.762849389609375*^9, 
   3.762849417609375*^9}, 3.76284945015625*^9, {3.762849498390625*^9, 
   3.762849513921875*^9}, 3.762849546578125*^9, {3.76284976903125*^9, 
   3.762849789546875*^9}, 3.762849903515625*^9, 3.762849955265625*^9, 
   3.76285000053125*^9, 3.7628501184375*^9, 3.762853492578125*^9, 
   3.762853841828125*^9, 3.762853894046875*^9, {3.762854001390625*^9, 
   3.762854012046875*^9}, 3.762854078859375*^9, 3.762854160015625*^9, 
   3.762854283109375*^9, 3.762854362890625*^9, 3.76285460378125*^9, {
   3.7628546338125*^9, 3.762854658453125*^9}, 3.7629283377261868`*^9, 
   3.762928519593439*^9, 3.76292900755015*^9, 3.76292906988689*^9, 
   3.762929160802969*^9, 3.7629292465983257`*^9, 3.762930857802582*^9, 
   3.7629309329423714`*^9, 3.7629322073601384`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-5.3216086797886435`\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(6.93890258930366`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.711735392817831`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7629292470825033`*^9, 3.762930858299054*^9, 
  3.762930933450945*^9, 3.762932207870296*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({5.3216086797886435`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(6.93890258930366`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.711735392817831`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7629292470825033`*^9, 3.762930858299054*^9, 
  3.762930933450945*^9, 3.7629322079696074`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-5.3216086797886435`\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(-1.3010426069826053`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(8.819391933389319`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7629292470825033`*^9, 3.762930858299054*^9, 
  3.762930933450945*^9, 3.7629322080563993`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7629292470825033`*^9, 3.762930858299054*^9, 
  3.762930933450945*^9, 3.7629322080880303`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.4761877833862159`", ",", "0.4781312859172157`", ",", 
   "1.2695259439394906`", ",", "1.3513989057261446`", ",", 
   "1.839511571534534`", ",", "2.218612623432797`", ",", "2.714640291454292`",
    ",", "3.254686689571897`", ",", "3.843044550587747`", ",", 
   "4.4711381489880075`", ",", "5.13811309053916`", ",", "5.836441217529445`",
    ",", "6.580305538646664`", ",", "7.335111058787325`", ",", 
   "8.127594858009285`", ",", "8.941227805084615`", ",", "9.815221381612725`",
    ",", "10.661522811403733`", ",", "12.81787811496791`", ",", 
   "13.607468386667998`", ",", "19.94822967730159`", ",", 
   "20.90855205054248`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.76284284920648*^9, 3.7628428890193624`*^9, {3.7628430284724264`*^9, 
   3.7628430354170694`*^9}, 3.762843093883272*^9, 3.7628433495536385`*^9, 
   3.762843406959203*^9, {3.7628434387926273`*^9, 3.762843474817773*^9}, {
   3.76284364388848*^9, 3.762843666035371*^9}, {3.7628437482301297`*^9, 
   3.7628437714954166`*^9}, {3.7628438704374094`*^9, 3.7628438803138046`*^9}, 
   3.762847983703125*^9, {3.762848382625*^9, 3.7628484124375*^9}, {
   3.76284844759375*^9, 3.762848461078125*^9}, 3.7628487438125*^9, 
   3.762848879046875*^9, {3.762849086203125*^9, 3.7628491225625*^9}, {
   3.762849239640625*^9, 3.762849295375*^9}, {3.762849389609375*^9, 
   3.762849417609375*^9}, 3.76284945015625*^9, {3.762849498390625*^9, 
   3.762849513921875*^9}, 3.762849546578125*^9, {3.76284976903125*^9, 
   3.762849789546875*^9}, 3.762849903515625*^9, 3.762849955265625*^9, 
   3.76285000053125*^9, 3.7628501184375*^9, 3.762853492578125*^9, 
   3.762853841828125*^9, 3.762853894046875*^9, {3.762854001390625*^9, 
   3.762854012046875*^9}, 3.762854078859375*^9, 3.762854160015625*^9, 
   3.762854283109375*^9, 3.762854362890625*^9, 3.76285460378125*^9, {
   3.7628546338125*^9, 3.762854658453125*^9}, 3.7629283377261868`*^9, 
   3.762928519593439*^9, 3.76292900755015*^9, 3.76292906988689*^9, 
   3.762929160802969*^9, 3.7629292465983257`*^9, 3.762930857802582*^9, 
   3.7629309329423714`*^9, 3.7629322259810243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"n", "=", "3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", "=", 
   RowBox[{
    RowBox[{"d", "/", "2"}], "+", "z"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2", "=", 
   RowBox[{
    RowBox[{"d", "/", "2"}], "-", "z"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"om", "/", "Pi"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "om"}], " ", 
      RowBox[{
       RowBox[{"z1", "^", "2"}], "/", "2"}]}], "]"}], 
    RowBox[{
     RowBox[{"HermiteH", "[", 
      RowBox[{"n", ",", 
       RowBox[{
        RowBox[{"Sqrt", "[", "om", "]"}], "z1"}]}], "]"}], "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"2", "^", "n"}], " ", 
       RowBox[{"n", "!"}]}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"om", "/", "Pi"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "om"}], " ", 
      RowBox[{
       RowBox[{"z2", "^", "2"}], "/", "2"}]}], "]"}], 
    RowBox[{
     RowBox[{"HermiteH", "[", 
      RowBox[{"n", ",", 
       RowBox[{
        RowBox[{"Sqrt", "[", "om", "]"}], "z2"}]}], "]"}], "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"2", "^", "n"}], " ", 
       RowBox[{"n", "!"}]}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"phi1", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{
        RowBox[{"-", "2"}], "d"}], ",", 
       RowBox[{"2", "d"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"phi2", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{
        RowBox[{"-", "2"}], "d"}], ",", 
       RowBox[{"2", "d"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"g1", ",", "g2", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"phi1", "+", "phi2"}], ")"}], "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"psi", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "d"}], ",", 
     RowBox[{"2", "d"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.762931583103363*^9, 3.7629318242209625`*^9}, {
  3.7629318573716908`*^9, 3.7629319005080357`*^9}, {3.7629319560097675`*^9, 
  3.762932006237342*^9}, {3.762932299201027*^9, 3.762932354695985*^9}, {
  3.762932387856324*^9, 3.7629324000648303`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.7629316498206673`*^9, 3.7629316708506927`*^9}, {
  3.762931707496809*^9, 3.7629318250421753`*^9}, {3.762931860232272*^9, 
  3.7629319013940067`*^9}, {3.762931956455447*^9, 3.762931960474872*^9}, {
  3.7629319992746067`*^9, 3.762932007520936*^9}, {3.7629323511562204`*^9, 
  3.7629323559478493`*^9}, {3.762932389066755*^9, 3.7629324010226393`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
v1BIHA2e1tH4qPF/wZhcFQ==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
G0yO1pC9TVqv84+QsFvhgNPFoDpy5GPHzaRuEo4dNmkhDjaQX/f/uSveTMKJ
LP5XdDkbyZWyN5lffSXhVs65XUH0zeRBT7Zo+XISlrSNGePiaiELrsg/3ptF
wuYUo/w/Dm1kVVgsUpRKwp9dtiQYX7eTTe4fSdV8TMJ1ucKzjvSdZM/mVpkv
USRc4ZUNrwd0kcMEzr7RubvN/5auHGPqIb+yn1auCSDhdyJnzU3zv5Mp6Tfz
DS+RMMeBvc9D/frI//Y/LT1lT8JqotJlrE5DZN7ru4gecxJ+KnQpterrMHkP
Lq60P07Cz2pWFhN/j5ANmfX0RwAJzzKUBmvJj5LdTNr+O6dBwpaWYqNL18bI
dx+fNf2lQsKsG69ZVPvHyan90x3esiRcO7Do52Q3Se72ZB/0J5HwSf2I+rWM
X+T5gqfO60wkrBr9ubHz6hRZYu5kM+0aN5bN2JEY5jJNtgq+0M32gxv7Sigf
uX9ohhzLFTHM18mNc4Y99taaz5LrnmX+FKvkxrvlhzIybs+RaZQr53bmcWOF
058DTlHmyT76awyaEdw4s88r2er2P3JWpxCXjh83VrSJ1w6gXSYPu6gLGbpw
Yz8B3xssqStk4TlTqVOm3HhdWudpluUa2Sz4oqI9mRvnKZ6g8iltkCO5IlXP
KXFj73peHWnxLXLls9eHvYW48aSG1DXnJBpCtXTIOHiWC9/Y+T1aYoSO8NRf
t4oY5MJfNqL9TWQYiFedwmfj/+PC3DU/h60CGIlelwMeKZ+4sGZ+lV/EGBPB
N2d2OSOTC0st+RUYubMQRsHeN3LjuXDhayZecUY24h5X1L2PQVzYdPTV5ZjP
7MSC0tcndbZcWDeHWiN1l5tQKR1Oaz3GhYUfskcv1pMIV/2NrF41LhzwtF65
a5SHeNYpUjgqxYUPqZPbKrj5iA4XjfIpTi5MDZN90GPCT3DMmX9dXOXESSNC
IydeCRB6wZeaNic5Mc8TnxZHdiGi+FnWEKmSE9+LG3vYLytKBAN9hzP5nPgt
H13GxU87CCPqeH92Kic+9UjSq89VnKDuku3VvbGtDWe4vEOliNyGCptYD078
a+O2flGINBFw8Wx3nzUnNtBV9xuNkyG4PjzvuKrOienRykmfPjniu6X2qQoZ
TnycqvDytag8kbHc28rJw4kb+YIiAi7sIrQI4W+v/3Bg4ZCQ3xpGSgTjyEfj
+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
g0Kp5sXpZJ947v8Air98fg==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7629316498206673`*^9, 3.7629316708506927`*^9}, {
  3.762931707496809*^9, 3.7629318250421753`*^9}, {3.762931860232272*^9, 
  3.7629319013940067`*^9}, {3.762931956455447*^9, 3.762931960474872*^9}, {
  3.7629319992746067`*^9, 3.762932007520936*^9}, {3.7629323511562204`*^9, 
  3.7629323559478493`*^9}, {3.762932389066755*^9, 3.7629324010545573`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwUWHc8ld8fR/beK/NeLiIVkgbn2hSRJFmRlK3ISKUSkYSirEi+kh1l8zzn
kOzseckqI5XsTT+/v+7rfc95fz7nM57n8z6P5BUvMycaKiqqr/RUVP//NfDv
/v3vnzxaOhzWWXUxqkozUPxi0pY8alkb88qLjqk6cc+tRmVNHu2THSyr4HlR
pfBo3yuXOXkU/0MOOIS/rOKMVgbdw/Lo/GLFhsbj1KqBzNjnmRXy6MIqL74R
VVDl3Hde1dhHHv0nVPeC+1Bb1ZOjPfeTpg6govBW6/cNLNUnrZrznpTIoac/
eO/kno2sXiwb0eMvkkNdtEcZiKlR1Tl8S2PpeXLIwcc9Njkqplqocz9f9X9y
qJi/I7XNJrZ6Td/j3txzOVRwXign4lZS9aejnGfPe8oha9ep1NbErGrXWKmZ
URc5FMbzbux0bE41YUEt2N1JDtl2rEU2FudVP89zKA21kUOO/H8UTuGF1V7E
T2Llp+XQL2JqHOvn0mrjJNqwWTU5dJXsF989jVfLc1n8FZGRQxcPKjwPXq6r
nvB0fZJNkENrL8ddepLrq5Nag4iqYnKokWk3kPNqYzVT+PuLJnxyiKrCIyTS
obU6QLvjqTOrHDIhpj/DH3ZUT++uw4f79uKdmmRcPdJdbVEpuZy0KYu8j9Yo
Bpj2VX/xPS1bvCCL7mnMaWfODVarHPGx+TojizQZ4zxfSIxU//c7OWZqVBax
lj46Whw0Xs2dVVf3r08WnfMQnVs0+VH90PHPumCbLNLx+wC8Y6er1WqoY981
yaIZdZ7T951+Vs+L8R9U+iKLgjebPbetflVfpmg4nKmWRfzOHSd4q/5W86ud
3+ovk0XyOfEbzXwL1W0vr7+8+kkWDSrNFhY4LVY/XrpzaKFAFoVzrkyvtS1V
q5+LabqXs+ffkqgVcX6lerkgw5E5UxbFJqjUuK+sVuexVuy8eru3rpZs0lq6
Xr2/cfxIYYIs+hy4eC7k7Xb1rRsF0ufjZBEWnSRbXLdb3Sp4R2g1WhbRbVVu
sIZTYdI1+myJT2WR0+CfibOfqbEgF17qU2Gy6EJRpn4B3z6sj2t8eSR4D8uW
T/Y+oMUOVebPPAySRTuGJhVR9PTYGLN+R4OvLAo482XujgsTpvaJp871pixS
OdAg/+c0C/bceqyMzUMWXY6aPeNpwobN7svPLXSWRfmr0ULBtzkwrbzbb85f
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
aE6OawwkZMzP2uHF8R3ze/FOaYtmL76Se4W92j+wZy9PWMTsSqNbTn/9Tz+d
xDIS2m9Lb0ojz3tXg5anprCq5KsplSvSKFFp24XFcgbrSt1AJgvSqObgCYXB
0Z8Y1TsiY+CMNErR9qsnHP+DCWSVy3P8kEa+l1Rz49n+Yoq5xiYZo9Ko4Pe/
Bev785huwYT38SFppMzzcVgkbAGzKfJ/1dYnjcKmpwJWUxcxn2LWSscuaUTT
pig50rCERZS9/bb+VRrdubPr0k+zgpVjLVLEL9LIqBI7cOnTGtaO7A3KkTRq
7j1mc0x+A5v6vOJmXC2NVCTY/XoqNrGd+ojoiTJp9EeBIhJuv43xNot/8v8k
jUZzvT5iEruY/NfiPtYP0ij2d7nXytY/TKvDcPNtjjSasp2qn9igwm/2+Wi2
vpVGirXBr3fF9+Hhg4xODinSaEmPYEBnRIunDaeEryZIo28Bmuf/PaHD2yYa
2iVipJG+VPZrVjIjPjlps1TyVBqp7484ca2SCd+eWeA/EyaNLvZhBZpnWPAD
f/fb+QZJI5s8vYbGEnZcc7HwIXOgNDptc/mXlCEnbrmi++6NrzTysP3Uf1eX
C3+85fW7yX0v/4C7EXPjwVN2aTkvO0sj2nCGTZd4XryYOkl52VEaHTUwVCvp
4cMnGOoCxayl0bHiuMvkcEF8g/lS6icLaWS3/zVWSCWMc7LP1RiYSSM+u5Ys
QvR+XINXkMnHUBqNbHrLii+J4RcE8hUYdaVRzHjivUInCdxdWMs0hSyNAhjG
r0ZclsSTJdzjG45Jo46w3uqo+0TcaMOZbVdJGqXLmQ3+RVL4dqfTIxVFafTU
vyrkDj8Jz8+5suEqt2dP8F+X+0MZ3O7RZa+3UtKISufZA659cjiHjc1kv7g0
OuL7b1/L6wM4Urlkzb5/r55cwwUcpgo4YcpM/w6XNGocOZxaQ3sY78ZNsCJW
abQziTE9YTqCh8QbKc8wSKMx29ZL/mJKuMoNw2yxfdJIZ6LPN1RHGZ800BO/
sCuFgMyHlsq7KvgrSe2XTzekkG3ZIUnFxqO43iZgqV2WQjEcpjfpZY/hWbnH
1xR/SSE2ztbbA3In8Eshqh5OU1LoYGNT+u22kzizrfL35HEp9NzeuaojUh2v
Onr4UtewFCpRnve9eg3g7uwH2xkHpNClAaMd5wIyLjotpwu6pRBN+jme6XJN
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
nhvs3ZV1ffnY8S+SQgO7ucGSkX47b4Gt31Jz658JbjDM9VMT72PrR+VQuPyD
G0JOV12tf87W326H9wYeHhAtrIp7eoutf8w5LEaGB/qiN1yfOM+Ory0QEFTl
AU6qyeZj5my8omyxpAUP9LYdHTX+yfaHpfXfdBce+ND5Rrqime2PK7EWSud4
4PO1m/vDb7P9MPl7lp7CAy7pBF59dTZeaiuzKI8Htgmk5ustsf2371Si5nMe
eKqReLa4iu2/onebdwzxwA3W4Tvcut0oxpflY0rghSiDT089lbrQuMWhC/u2
8oJamOKiUWsn0lWZvbjXhBeUCxpEvAM60cyYUpzJaV6I9ZsfHHrRgSwtIvIM
q3hhQBdv3xbSjgqU5YsM3vBCzqJNWHFRG+LcUFEGI7zQpviz7v5gKyqvnUL6
6/nAM8V9my/tDZJWNh3SteSD1NQz006Jr9C59R/HdrjxQRiR3Kib3YRaRkM+
/RfAB6VZwv1ZTxpR6K0nSzp3+YBveZpxC3+JxrhEhLZ+5oO3nvNWFcEIPRrp
N1IN3wQ2to431hs/QRw1PqYqNzfB8zbnsMeLj9CRVF4r5Yeb4M+7CO3Aew8Q
v/lOZ3rrJnC91oy8e24jn+rMQLI0P2x46e7cvjWS+V/K8SdyT/lhq+/QVJFY
OTP57N9nsi/5ISuorfeDViXzq+ntGpk+fhie4WwrtKhi3uV4/UrqDz/Q6lcF
yoNZzHVn1cbF9grAQ9U3nQP7XzCb932X5B8TgKy0cy7xI6+ZCcJ8j14tCECf
080rHqUtTJt+wo4ILkEY2fzdvTT8DXPM3cLhN00Q7F8FvtUUb2OuXCrI+uwt
CBKXDitybuxg4iZ1mg8uCcJtvZCxFpcO5lWB/nqXZEEgOSo6eD7vYApnrJ/o
KxeEtkQZ9WWXTiaj0oXRuCoIgS1FaVqpXczZ0IDqcAEhCBqnGIYMdzHLjeJN
9ZSEIOzGQt1eYjcTOmtOPzMUgu7Lx79a5nYzN6Z1rp2xEYJx+4zukLFuZqvz
5wQVDyEgHpUR4ZfrYdrPSJTejxGCzbE10gbRPUzFZ2qGThlCQFUukRus6WFO
BBl1Sz8RAubQh0nW1x7mYzji3oMLwW+uq9yfpHqZPtznlhM7hKBXz8DX2rCX
qdMeFWk2LgQMh+Kw3yd7mX9SMqW4l4QgtyF/fCihl/nhyRGbD5zCcOVPZu3c
016msciUPNokDAnn+2O0O3qZ+X7nJu+KC4NP2o0tBTO9TL6BP0+CFYThpInq
6p6NfUzvndEB9jRhsAwh3BRS6GN2ZIoxdTYLQ3yUEN9fzT7mVs4sbvH/hCG7
4l6PiGEf89ZxlY4FEAa1SKs3+yz7mL+aK9Le7hOGnDQHlTyHPqajmsGxJ9bC
0ON4IJns3sdEia3KcQ7CUFv0hrPxZB+T9N1u0dNdGDjOiU3EnO5jXrP9WGPi
LQx1/rf+nGePP1efiaAECMPgbS//y2y8mcJvM85LwuAaUDFQ6dbHLA6/Jj4W
JQwefRtFJNjziUwIv8eShEHwa65n5oE+pt+eu3kZd4SBUvIy+pAB+x73mH4m
KEcYzmewAnex69EVfKZjVygMBzvI9w6zzy/3zun/21YuDCAyUvlkQx9zXe/r
V6KYMFTUksZ3sfVy++9Q0nyjMOzhOJcqyNazKWPMvr1dGFTzL2RTSnuZ111/
fokZEwYzx5PPtE/1Mucar5Sd+CIM5U6CgnrGvUxrZcGQ3YvC4AaH3DJle5nS
8xR+jvUisHtWYFcy6mGGHHzaM8IvAnofcgo3J/QwRyp33mNJiMDbj9undh/p
YeZdtNYIpLPxz1tnV752M5vMvI2UNUXg07otSv1Pu5lTMtH2Q/+JAN+RodTj
ft1sf2NX9ExF4KzplR/lS13MollG/zpvEWgM+HdF8l0ns41lNFPqLwLzIlsE
zyR2MmdjnTncwkRgDXsAyKCTuZmeotqYKAKldzt8LmR3MMtc/l2KKROBV0q3
l9oT2pnd6rKpurUiYGAbdcVjsI25tLrt8fRLEXg0Pq2aSWhj6qR59ezvFQHv
8oOepnlvmNUdvQzRFRGwTpSLVY9tZtYZFHWm7xKFCv8/C/H99cwPQq+mzExE
ocHVPz/4Zx2Tc+TD6h8LUbihWSx+Q6KOaRwsRXM5Kgoi7++nWt5hMV+VXQkm
R4hC07Rz/HXrCmY7+TC5qFkUXl72r/l86w5zeMNGf+ygGBR5vmT8TX6OWhhW
k6pOYmCWsr34QHw1em5291C6hxh8/i5sh1+rRTeStXQuBInBpOGQnpI3QnsU
XH5qZonBTltiolr0S1S2rSrowVcx2KCetfcBakFZdlxfRZfE4NqwdWVX+ht0
PdjiyOU1MUATl8ZIvq3oRN2ErrOwOMw5vw4bk21H8uYif6R0xKGu7LTpxZwO
FOXmFRZ3WRwkLxymB4Z0I7/IitlfseLQ8XVl5mp7N3ItWOfimSIO5VS32Aql
HqQ3d4u5O18cmh7JZ51j9SAV0fGSZ0/F4bo0/6Vl7l4kpa1OINWIQ+4ikzvB
qhctBr9c969VHGKF2kkLI71o9J7gOe8+cXimygiuJPWh1rrDH96NisP8WPa6
SPZ5IX/jfH3VojhEW0mZ6433Iccb8hHnpSVgOnfCY7yxH5lWnPg+RpQAZd5T
Nd2/+tH2gTK3A6oS4B030fFKdQCJKu4zVtOXgEuvtudXxwygf5BSnr5HAlIe
h9dUVQygGbdRCq+VBFRVJWljowPoVYH/hik3CbgcG1r/Tn0QlbfW+dt4s/PV
UGV/WQ2inLlNUy8CJGBf8uwJkt8gShS1s90Szs6/snn8cMogCtXOacqKkYDZ
SqVf98sGkZf9Nx3BmxLAv5Rus9Y+iOxC/ssPvSsBSUXTXWe+DCKt+vaowyUS
kHGntzpbegj1DdrvolVJwJUg26uiakMoeHF8cbFOAnqrw09M7hpCipu8H6HX
EvBJ8OxleYsh9IL80+l6F3u+TQ1itY5DyEPvstjhdxLQ5lp9peHkEOI7tOk1
dUIC9M+p2+j97/tF79SwxRkJkDEv0aD97/vGSKVtaJmtR2DMwLWoIbSUWfAl
7q8EqEe80XFJGEJpz7dm2XNLAiHX2rzy5hDS68BsqMKS8CWt87/E20No7PMe
vkVpSXi83L999s4QusrRhXCiJMSuDGT1pw8hhqyjf5yKJDRraH04wB63ak2p
2G+VhH2cWtcc0oaQj5nPGEVPEmqPKar/SxlC4u6/UxeMJWH9k53JzKQhVBV6
1Qzfz8YL9Vwixg4hx1RBjjhbSRg8yxwuuDKE1hWnVdq5SMIacebe+6Ah9KCJ
dJriKQlDwZ5v688Osc/TRcQFH0nQ8vOOd3AfQjM/dfqxIElwvvx1w1O7IZQo
XH899ookXKwVvdCwbwhpKZsZ2sVJQmn0KY1MXXY/DHp/klMk4eCH4ShDFbb+
vl9csTxJ+Pudq3vdRrb+cb7SscWS4KFFYlEXB5HHg7U22+eS8O6H3TbV94Oo
uFdkx3yzJOR+I26dLRlE1rMZs6xOSRC4U/av8vYg+rGR9iBmiF1/QspkQNgg
0v9PV4g8IwlpYu96FvcOorZ018lDQlIQM39ZJbRrAPk8m0knSUuB1utfgZll
A0i8NcByjiAFyYd2z08mDyDHtdjaaC0p6Dz2Pmx1P9vfLs+Saw9JQbqk3+tx
Vj9KCty1J9qZPT4uz9Nxqx9tS371x+aEFJz89ytE2Kcfhb54d2I2UAqEX6dX
3Sf0o03U9frEu1LwrcZ6OSe4D6l8tfkaOS4FRdnplDnJXpRuJ7QqPCMFf0Ot
h9FED9rU+HpTxrIUDNc//KZa1oNmsvTVS3ik4RUh/sGcWQ96cojh068hDV+O
uGd3s9cXzfrVZXqINHQGbWrc3tWJtNNyOF6LycDFNU+X7NVW9HCDk+hBBRn4
40H2PH+zFUn6SpHf02TgnRjhZrVqK/qx/7rxwg4ZcIvnflbv9AZVcQVEyRyV
AbXjxtc8ml8j3bP7BLyKZKDJKQi9YjUhMJmX3rRbFrzfZ/gb6dejEwVfznzf
Lwu7R8cYm7/XoQT+jw3vbGUBN7Tq//KoDg139foUecpCU9bH1LeSdeiCS23z
/uuyMKDyRGtkBUPFgZGBSd1sfJWTR/RINep9d6k9cFgWClKNjhW4VqM/+kGU
Y5OyYPb7v9Qzn6uQ6YbTHVt+ykJQ4POUDyvP0WSyFaNbVg6iOPjndqtXIvlC
+QEJVzloMtc4fGW8DBkJSmr89ZIDp3C+EZXwMuR1TujqlK8ccJsVRh9WKkNV
2zk1n1+Tg6OBurb6rqXoYMOnKPsCOWiPo5YWfC9BwfQP76FMDr599LZimZSg
7Nihrcq1ctD2c7yo8G4xmrVsG/3VKgd5ezjOb7R6gmLfl23PmJeDiC0KNXND
j1EpFMVH/GLn+2QXrWb8GA3k5n08xSkPuQKFJ4SeFiCaV1qinrg8RF2vTnic
+AjV/7j46f12eQhtnBk56f0QrQjtu024JA+ueYPakXdz0Pv3nTuGo+RhoGJE
eVAjB70oPDJ8O0kejDcO0na/vI/i9pwmCuXIg1V+ZbrZYjZSvJRYuNYgDwt7
ROipHZmIa7+0RXWbPHB1bJnZKZGJPsven/frk4fqqPH5HKd7qLSyTHvmE5uf
x+20oF8ZyHi2Fw3xKUCt2pPllw53kDLL2fWWmAIIL8HSFCsNCcZ+Wm8trwAe
bWeKHYhpqJ/6a99rdQW4F7MYv37pFvJyku95bqkAyxe4qsbwFHRANS/A97AC
BPULshR2pKBtv9RlNrsqAO3GnjNGlTfRWgrT+aGvAkyPCFhJVt9ASa2un1Nu
KcDtqgO5YaNJyD99OtYySwHW5y99eXA2CR3x9FPnf6QA5gTHt1acSYi8PvJ8
RLUC/PGPDiU6J6DKnQV/zg0rgEgfz+2mfXEog1crS31SAWxivJNWE2NReH+N
wZdvbH6fgu7GDMWgfb6tkUf/KQC37Zc+h9BoNPx4TvgASRH2q6XsS5m/huoD
A5/xqSrC/Uz+s2Z219BDEw7bpq2KkHlj/8Wq+qvo7Lhoxq7dilBdHv3xxP0I
xCmrQ1XzVISPdi7TYrGX0dQn/NUnH0VIe/Ivwof/MnpTsccrN0gRticKqCwk
h6MUq8MlsnGKYJcRe1Pb/BKix4Tu4C1WhJdcU7mR4yFooFB7+5XnisAVe2F/
+/oQFNs+u221ThFSpRzf7VEPRjNixzS/dSuCjMZW8o6kQPQ0cze985ciXN7D
jUum+6Nj9X8pplxKsKUr8PPXL35IdOI56SW/EojZ3Onu1vdD/soqihVKSjAv
eELC9ed5pFsuKHFntxJ8f7dix53tg6b7XomKHlACb47j38UkfNDdX+HCcfZK
cP5li+ZV+bPon/73TRdPKUHBBjERFRlv9PRYEe8PPyXg/Lh0j4d8GrlePc59
NkwJ9Lv4yTbbTqGG1/2cx5KVIEl0e5zn6ZPIfyZp3VC6EjzO2+T99oYnogmZ
/rV+oATtv030RtEJFGPD+mX8XAkcrH+dM1D3QBaj2fOM90rQ79eUC5ZuaB3n
kdn7U0pQ9Gx7i1S+KyqliM3IziuBjGlkuwGXK+KreOEbyUEA5JL0drnlKHI1
yVo03EiA3tCoF9o6R1Ftf8i5f3wEEBfQnPM0d0Gnf287GyhOAOuo8+Gv6E6o
IU5kdpsMAVSKqkJySI5IQWH29IICAbYIeNycpTqgdma+lxedAF1WceWjxoeR
5jUZD0ddAkz5ho3nvj+EoiV/TEgzCWDyqfZEsMQh9CG/y63XiAAf99WVLB20
QTda4o5Z7CfA4zvadN4JazTt4DnGZ02AisRnq6BtjYy/Gbu8siWAwKbqdrvr
VmhZ6K8jHCWAb/HIm1Nmlsji/tC7P+4EiOAKOE70OIAeaj0/Un2SAJ3USe5m
pgWyP+Rjr+VLAGaDR8SEsDmqSR8/SIkkgJciad1H4l40+9B5OTGWAJfdv+Xn
m+5BpGdDt1YTCEBMbAzzDjZBsW+6BrtuE+DH97Zx+qwxwvstQvTvEiDEs+56
xRZjtPixRf5xNrt+cYXEgBAjdPjPC5fLBQR4vW/iWTfBEF3nYXJ8e0KAWdPJ
dLFQA1QnXptjX0aAFyIONu3DgBjqzyY31xKg/LFGgagjE6045Z4aaSVAgLz5
l4OSO5Gal5KAaScB7kymO6TJ6aKjARnFFb0EyD9U4nhMeQdqTri5cH2EAI6n
zDJ9nLajP+lCN1fGCdBwSubi1ggdpJkft839EwGOs94J+j3VRrdRxIWd8wRY
ma9vCCFsQy1v/knnLxHAMr6Fq911K/rbH1Ij+osAw/v5JcoLtZDHvO/aFw4i
zG8mqbpbbkE6RPeINDEi2DU5z19H6shLfYyyXpoIJ1nBXTtz1FDmDsems/JE
yIu2z+VMVEUbrW1491CJ4Hn8Sfy1a8pI17njcZkyESxV7RoyExjojJe5uaIG
ETbgBhyx2XTUe8U4cVmHCEoZWxwL31MRT2Kd5rGdRChn7wtWPFSkl6HX1cok
wi6OqcUCXQp68GybxIO9ROhQ5xI9WUFCfhOUDOsjRKj/9sjo2YoSejSfrYc7
E+FC9rFSv1pFNPxHfkTZjQgnnnIXjsYoIGMJCSLHaSJYWGp7y+yVQ4HE5Ben
fYjwY7rwK3m7LCpSF3Af8CPCRROKxgFNGSRmsiG/5CIRbL/jmveZUsjE+vJe
uStEWJy3xuQOSaJg57UvkZFEGDPOuOTsK4HGA5bVnBOJ4Oj4YgfnazFUlj9Z
xn+fCMmPQpIqO4SR+cgvjv48dj0h95O3SQqjKXFBq/uPiSC2JCz4ukkQyV7R
mdMuJ4LaarqtDZ0flVeZ6q+rJoI5J5el0wwfsphzjm/B2PqO/t50DedFEY5R
qi6viPD1KSGTEs2NFG9mBCu3EqFJcNkxJ2wjqnpd8vp7B7v+oGlH0/ANaEZn
4ET0EBF+Uv6Z2eZyIRsR5Qel34igz0pxn3Nch2b37PoeskiErVJ3N7sa/sOj
w6wMTX6y+3vDMmR1aA1nTQeNDa0jQcuVLfcHdqzitqSEzXkbSKCS0lcw9vcX
Pm+fE3aWjwTrlaQiIjtXcGpTi/x6cRL8Ks+75XfvB173Z+RUuzQJGorvfS5O
XcaPbP1ek6ZAAgPpzj6vO0t4QrbcYXU6CcJMx6Ii6hdxRv/mRz9VSSBGDxP8
PbGAvxAw/lmvSYKa1MRjVNEF/Efw6VRbXRI8uW+89Y/QHJ5UGj5BYJIgw11i
vj3rG67yOWXrtBEJtl76cuM3cwZ3PoR1XtpPAqmvVdZZxV/wlbhOgqk1CcbN
Sw3fhHzGb7yYPCtuR4Jku4YdFbbszWyzoGDBURJUaupI+mydxF09SE6+x0mw
EPDSibZtAv9zV6dolxcJnp83XHOHj7gmn4tply8JPnI1iEQEfcBbwPfO3UAS
3JjS2+WbN4a7X4j67HGRBDN5L2/IVI7iaRMlkauRJIg88c+S/HIY15Jr6G2M
I0HdUMLl427v8FarAUpSEgnMkve+6xAbwtehdS8p6SSYV8dND+b04+nL4qJz
mSQo2COvIXGpD9+mpnysOpcEVww04dDJXtzzjtW//U9IQOSTjVpw68Y5O45b
SJeRwE/dwVvDtwu/uzH43nglCdBFdffH8Z14h2/Ozgt1JAguSOd52fAW93pc
GWvQSIK3A/ddbLe34+s/tAxuaiEBQXiK8z6rFd9h8f1CdjcJlhs0PnH9eY1r
6R7wthkgQd9KHDpS04yr0Qpded6TYIR0kVEa9QpX/Ou632eKBAcyM0vLzRtx
qa+4IWWaBBwFMKpk1IAL98n+NzBHAkGjJPJGk5c4Z3EX2zwkgJ+Fu3nP1uOr
dzSkl9ZIEDLqLSWdUocvXYsVeMRJBr29JR18UQifcjJcEeIngwuFb1D3Egsf
3Zf57aUwGQ7+NPz3RrIWH9D+PX5Bggyuwxavk1A13iJQ1jaqSIaluZnoVIPn
+MtfAi9vkslw8Rl2zkGmEmdNnqzawyADOHOqHv1XjhdjxNySLWSwPnvcIvZ7
GZ5fcDHNTYcMoklCen7ryvDs1MF4qZ1k6BHgdaPKlOI3vJMDLxmTYXEiN/pY
fzEed/ib99Z9ZBgOfn+QZ98T/OrufW6f9pOh8MhGLWJ7IR6gwGFxwI4Myke6
e/iECvCzvE5GXI5kOPBoypP2Oh/3XK767/lRMjxsq2/Ze/MhfqTNh6zkRYb4
J87nsm0e4AerW6W7z5BB+yxW6WWai5vnMQSjfMkwXkDkO74/B9e/OLYyG0qG
Y+mKj04FZuPbT+rN5lwmQ9Zou/wt/Sxc81DaR9tIMgSEkTXW5dzDSeqW7Xgi
GV5c7bWqyEvH5WSKXp5PIcN5lZ0egsZ3cPENPNW0O2SYaE55qr50G9/4HuUm
5JDBZtDI5VBkKv6vWe6OYT4ZMOqg/QuPFHyl/ELCj0IymDWkvsEO3cS/Xt8c
5FxBhrK09caJjsn4x8C4M6I1ZLA4qr8s4puED7t/cmvCyRD2sc/zp0oi3q6X
ZaHRTIZ6Ib6/7j/j8FeMVaPxVjKc8hEx7AiNxevE7Xbc6iSDL7Gg8rFEDF42
I0j5O8Tmb2BmPnwxEi8c8JIpGyXDoy2evJ5m1/AHDU2CHhNkiF4sV3zDuIrf
uhv2q+0bGTxvHaUvC13BE6OHZi8vkiE0WlDMSPoyHu2nM6H9kwzT2+bd/NXD
8RDz2fZ76ygQ/I5Xa/pnKG757MvUug0UuIIOHje/EoJTZCf/uvFSIHXqtNwv
xWC89dM7DRVRCry9p0dviruAZ1v0m8RLUuBAj6Pg3iMBuH9Fl/O8LAWul22o
6d/ujytGvE6oJFNgfQyn1V4FX3zxS8NDGQYF4k8GSnaRz+NNlnV4qBoFDla5
367ROYefVXw+a6hNAZ5nofIZf8/gxtfKNj7cQQG3iZrUqhPeuPTME0VefQpo
7ylyJU+ewuuqH1i8NaFAjVwm71/pk3gKIdtDy4wCjwyCnO+0ncA9ozLCUg9Q
YOOQ7GL/DQ9c5NCNYgd7Clg2H6TzmbvjU7XxTbgjBeSPaFwM0XfDa0gxI8Rj
FGh9pJQRq++Ku85fEvx8kgInr2lvHnE/iuvYhdDMzrD5H7XXeC3mgvPhAfrF
5ylQvHh7TMrPCX8W533GL4QCAr+29pB8j+DRi56R/ZcosHL2iViP0GHc8bB7
pu5VCvx1Nf9dgtvh6+kO7eviKZAes9PQ9sAhfCDedsotmQLfZP13+G62wYuW
rP42pbLx79TWuSgexA+92KsRn0kBzgKb0gqqFa6ibGwyn0MBj9P+UXV6lvjf
RKbzwXwKmJ1QOVyGLPCHTjoJMk/Z/T06ZnA30QwPbtjyMLScAns97xwSlzLF
D6iq46NVbP2Oq8dRy/biKyvk2bx6CtwoOGJEVzLBW12UNvI2USDvRakLzBnj
2U2yiqdbKPDMfiLf8K0Rvi9FxEKrmwKF4S+i22sNcMVVfo/UfgqEVHns7G8C
fPEYT9jKOwqsTi8VX8eYePrmf0/wCQrU8hKC/Y/r4Wdu/W4kfqHA49Sao/zv
dHGjteX3V79RQGnXvHLU8R34TMuMgNkPClT0rjhMlevgdVs+U4t/U6BRmFTy
5oI2npL2cZfIP7a/lJVPppptw3d5DHn3c1Ph0B+dwy4kLVy0rfeaLj8VlLVe
/UbkLfjU1s5794SpwE2fa2jQ0sQTOJrb3GSoMD5i8rPnmxrefMPhJlWRCj/8
kBn/NlWcizJn/4lEhbkkg93rU5Rx/YorigV0Kgw7pPGb8DPwQBPJCS81KtBv
lkWfzaDhZf0FBWpbqPBrws1AC6j4N89dZ2e1qXCj8pel9S8y7hrn/vsckwrS
XY2NIg+I+F35FbTVmArTmfSQ+JsEvP9J3LXlvVTYrPCgXZemhIsylcye76fC
LT2J1UdGCrh5R5lwkDUV9pw+8zvvohweecykT9eOCjcH83ziumTw+sXBjD8O
VGAUOL1qAWlcR4KDHn6cCvExfu/j3CRwn4cpMwZeVHDqK51zkBDHC7czyrjO
UuFSIq8R4Z0oPtVce6HRlwrHa3Lnip+J4IQjB3ZFBVJBbeS/tdl7wviR6XHO
fRepYMuomireIoSnhgY0812hgqoG89uwiQDOl3XvYEIcFU5df3xLsJkXN9bc
ImOZRAXLROm9zzR58Ev1DSMiqVSotF0xXirdiNdY2z/ovkOFA2farzuZbsCX
Pk6fTM2kwnvB+OtJK1z4Zv9Lm+1yqTCUt37asJYT99ootiz9iJ3fUNRjVzIH
PsrQDb9bSgUyd4evwORfTLambbdzJRVUpMoNg3/+wWzMjm0i1FJBAI95LcJY
xRKHlzo+ICpM7bTx3ej/C2vxjr6V20CFv3FNd/KGf2Lr/8k5Hn9NBXcH+7VD
Tj8wZlIJkd5OBW0vjoO3lpew8rK+osf9VLiuVH5gy4lFbNbI6/zpYSr8Vyy3
c3nXAqbcu7Zd4wMV3uL3DWXo85i7R/La3CQVWgyMSziMZrHMn5SXpV+pYL22
PxDsZ7CB6Kpo3zkqrO5olfgZ9xUTkzW30F6iwnL+3nSz4c9YtJ7vYNUaFXzq
tpcuvJnEXrRtzArmpIG3em+hhOcEtuac7q7HTYPaH91Hg2Q/Yv/Nq6v83UQD
t9KLanUfPmDnL9fPIWEa6F122ZPDGsOKRA9VXJaggbAZn0L/wVHsU+7nYCNZ
GrjKD9YsWb7HHJuENr4i02C6yUnE5/Egdssu9000gwZeUqd2f+McwDo/6ySb
qtPAJaOsXjOgD+MPbrHl16KBbcNpgRucvZjJJmf5dh0a+Dd/OH7lYTcWfnfh
Q+JOGjz9rbQj7mgXVqt+Ld8KaFByhfjcfHMnpmlZpNW7jwZns195N29qx0wc
R2VNLGhQHUjz4dzeijl6inI9t6bB/bPlF43DWrDzfrun6XY02LmHLPZ1tBmL
Cg/sTnOggXm0Y4vHkVfY3euFtbxHaSA0lr9u90wjVpY2khvsTgMNtcpESkoD
NvLU2M/RmwZxv/1c3hBeYEusC45t52ige7B++1aueozv9WNj/QAaRBN4/lZ+
Qxih971aSTANThWPmV9cxjCdD8IShEs0yDrccbNVjoWZfzNaS4qgwZDT6/we
5xrM9VfAJEc0W59yCYcxVhUWL/K+4mMSDTZNRrAKX1ZgOQrCmTapNFDsvJYZ
fLIcq1I2imy8Q4PbJw+OeFKeYe3aAWd0MmmwmX5pVOt7KTZhUGCbn0MDaebJ
v/k9T7Hf+4f1pfNpIFcW9N06sQQTPiJEjymkwQHGpn7rW08wvfP+P73KaXC6
ZwQu/CvArMMejb6rosHEmf7+VadHmGfsu1fmGLteo26ibt9DLOyW4FOsngaq
3A+ncj3ysJs5BmkaTTT2+vUw6oXAA+xRsV94VgtbP6M997VbcjC8Jt9T+C07
v/m1utL0+9jXLoEdi/00aLOS8l2YzMTWjQLRbZjNj0SKkFi4i0lO+/L2jNHg
mMRjortcBqb28+GC8SQNck0vzCy73sEMuIYGK77QYD5poGxd023MVkjgBW2W
BhE796Few1vYaTl4fHuRBlLbdXXH+lOwtK0Pg4NWaSCaXORZY3wDK2YOun79
R4MzERDeI5OMNZjxmzmsp4MgLV6jkiMJG7Jjbm3loYNx4s507x/x2Jzbebld
AnTIONpnc4nvOrbeJ4+rWIQOof5Bi6m7YjHZ0IFpRUk6vPlRntUYH42ZpOiz
1inRQTe2OcIm7BrmmH3uwTkyHdTXrw/3kruKnS96cH2cTgfDqxG9XG+vYNFV
/X4H1egQ5zNgW337Mnavgc+pQZMOHD3h7Tv8wrGyjl27tbXpwB3p75DcFIY1
D/uoP9xBh83BhplBr0KxpaW+tShDOvxqqGoUVw7C+Dj4plZM6LDp5t+RjmsX
MILArvaTZnS4o1M7fnzNH9OR8akcOkCHzrv7jcgJfpg5NTfTzIYdv3Zf3VfH
F3Pd0hfJsqfDy8yYrwNL57DAXbxn1Z3o0FxRbD/3ygfLPXSWKeRBh9O4/xFB
C29MWupr20kvOtCqMMESr1PY9QF3x4YzdDi849PN5byTGEf66FdFXzpYeXd1
raydwAIcjgQFXaCDo0nJw28+HthX+V7unhA6PPvkK0xdc8dcRg7c0ginw/cP
Z67x3XfD9h7b/exjNB3q7zdu41E5hmGkOgP9eDqc5L2GvPmPYloTuh1pyXTQ
w16e1+J0xh7mVTh/T6VDAx4V3SzgiMmd0Py2P50Oissqp/x3HMGSGIUhjzLp
sEdz6YdWhD22/iuVjyuXDsF7SqhyX2yx2dNy9KpCOny10jLz5LTB3DRuVYg+
pUPp1WtNSWXW2MCcsLF3OR1M/0M3TwRaYealcV2vqtj8BrnVrltbYvXnNx4j
YWz/3MckPC9ZYDrbLs+F1tPhjIlzgfVFc+zx8urF/kY62J6zpty8a4qlBC6k
X2+nw96hP/0VOnswXt3Typ+66JD0WeJo7ZPdWNjq1HODfjqQ6vQPH9Y3xhZZ
x0zuvqPD5AU3fHrKEDsRNtzzY5Rd/6/vXF/yDLBhpp2b1QQdFkJ0/caCALPk
6Foo/Mzut76b6cILfUz36ivBYwt0ODjAyUdu08VKdhveq12mw9Pl9dcTuHZg
FG5MVfI3m0/Hlik+++1YWvP2Gp+/dAgL8dF52KyNCcSW7X3DyYDwo2/2Jhzc
hl0xU++ncjPgwlXzu4I/tbAf/I+Oh29iADVqNTKhdAs2lnjvirY4A9p/f86y
faOBHbKSFkmSZsDXxAd11Go1rEX0ZtZXeQYU2H4Zl25RwfR7BDR2ExlQnX1k
cGKVgT1LjWZlURlQOPtNzd2cjjHsuMx+KzPgyT6b2pRqKnZXOmzQRoMBZuOa
IakGFCwyw/cH73YGGMXqBMhnELFVx9mr7jsZcHsuZNL3JAHzUTwphpgMkK+S
r/ZLU8QmRj/elzFmQNAxKaRxVR47fN9Z028vA65G8iQk35TF2l0H8XZzBqS2
KuQbNkhjhhSb/cpWDOBPOvpUUFwKU8vf5zVymAGk8TXeUR5xLNuzYeU/Zzbf
U5QclceimIQKM+qmKwPeiuUFyrmJYLHT1RKzHgzwDwj1UNISxv4WbXuw9xQD
yp/a0y6qCmK+Z0q0cs8ywD7uYeRWGX7s82aV+jVfBmTSna51qvBhnWVKI2Wh
DMiT4Tpq93QjVpSpJXv6MgMqQ7nFNv9bj0XG7ralRrL5P3EO/ujNhR0LsL8x
EsuA46c+M6i/OTA911PttxMZcE5af679/jpMyiKMzyqFAZMRvK8aG/+yFnck
m/DdYcCgXdpOoQt/WI9EnuOhOQw4O/1NKvbwCiti7fVv7XwG1LxpOH7r6g+W
85dhnblCBqxfp33uXNcSa0fv3PlHTxnw+YGzRCJ8Z4nXc5Ycq2D3q+bZthut
C6y5Iolp2RoGLHGQXff5zbNa0hj0HpwB/8oX4uxOzbLCfSyyTJoZUKa6ZbvI
ny8sB8dj7/61MoA8rZVswvWZpbPXT6q6kwGSPE+y92lOsUS2RR0838eAO795
bxwIn2DNKKUnqr5jQAL51N36+XFWzk/EnTnBgCxF/Fuo8hjL/u3kJeFZtt5r
TnH3brxjCeZvWrnykwExqqrrZq70sxrCtvgsr1MGKYEv6xP4eljBtnafT/Ap
Q9wBRvsLsU6WpsbFo0NiyqBh9c0XSbWxpjbkDpgrKMNXVof3y8Zm1t33zZaI
pgy6ytveyUk2si68fnc9UFUZ0uO/xRX4vmRZV8w2b9FUhkyp6K3MhXoWT7y4
wYMdyrDaOim3IRJnfQykX3TSVwavfx+f1VFZLNxdt1rSSBm+F3rEMZeqWX56
R7fEmCvDLXt+zTtClayx6ULiGRdl2JPTESg7UMKq7ced6O7KoB22Q1fH/gnr
1svOO2OeypBrZjMxx1vIMs/4KXLwvDIs6j0vt/n+kFVlasT53zVlWHf59Eb/
q9msxIKhcY5CZdiqfffxCG8yy0Q43sCrRBlY5dL/vKMTWX8CmNldz5RB7v2m
PWrq8SxP4wdOuSw2H2NJE+Ff0SwY9R4wbleGUtlNppZ7rrAWxTnaoxaU4fgB
uf0mEb4s23B6tcB/KsBf8rcz4MshlqKdX6JMowoQH2UfLRKQZWV2f2FsaFGB
kAvvA9+/kGIpWbq8mG9Xge29JAVGoQSLsM90+dWACuDGDVgblyiLvJPgEDCj
Am0th75xj/GwGEqttG4xVaBY/rGUzPhZu/UTGb/uqgqcAradCaM9teVud+wC
T6jCw7wI1fTfXbXbxgQX3E6rAuHxZ8VdBp21OoO/yDsDVIGrj1r939XW2v/e
vI35EqMKHJMyr2V8X9bql4QcMilVhYowVqMjV1ktrrowu6VSFaK8z+0OPfK0
lvnII1qhVhXKWwaHXz99Ugv3rWqXGlThsNrf1Qr/R7VGN+nE3AFVaL3d6DeR
kl3bIHSvJuG9KrTFVM6WS2TWGl8XtQkeVwXqO7tiRdOMWpNra5FWM6qQkXy1
8vb5W7VNHL6EXQuqoG31WUjdIaV2T9jnasYPVTgUsLpNy/9GbfNvp4Piq6qw
5H3wDJGVVPt//5fB//9f9j+hjSQA
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7629316498206673`*^9, 3.7629316708506927`*^9}, {
  3.762931707496809*^9, 3.7629318250421753`*^9}, {3.762931860232272*^9, 
  3.7629319013940067`*^9}, {3.762931956455447*^9, 3.762931960474872*^9}, {
  3.7629319992746067`*^9, 3.762932007520936*^9}, {3.7629323511562204`*^9, 
  3.7629323559478493`*^9}, {3.762932389066755*^9, 3.762932401077468*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Calc", ".", " ", "of"}], " ", "the", " ", "lowest", " ", 
     "energy", " ", "levels", " ", "by", " ", "diagonalizing", " ", "Hmat", 
     " ", "in", " ", "the", " ", "symmetrized", " ", "double"}], "-", 
    RowBox[{"well", " ", "basis"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"z", "^", "2"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "/", "2"}], ")"}], "^", "2"}]}], ")"}], "^", "2"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"d", "^", "2"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z1", "=", 
     RowBox[{
      RowBox[{"d", "/", "2"}], "+", "z"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z2", "=", 
     RowBox[{
      RowBox[{"d", "/", "2"}], "-", "z"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vho1", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{"z1", "^", "2"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vho2", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{"z2", "^", "2"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DV1", "=", 
     RowBox[{"V", "-", "Vho1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DV2", "=", 
     RowBox[{"V", "-", "Vho2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"nmax", "=", "10"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hmat", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Smat", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"j", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "=", 
          RowBox[{"i", "-", "1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi1L", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z1", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"m", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z1"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "m"}], " ", 
              RowBox[{"m", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi1R", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z1", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"n", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z1"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", 
              RowBox[{"n", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi2L", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z2", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"m", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z2"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "m"}], " ", 
              RowBox[{"m", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi2R", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z2", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"n", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z2"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", 
              RowBox[{"n", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"E0", "=", 
          RowBox[{"om", 
           RowBox[{"(", 
            RowBox[{"n", "+", 
             RowBox[{"1", "/", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn1", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi1L", " ", "DV1", " ", "phi1R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn12", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi1L", " ", "DV2", " ", "phi2R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn21", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi2L", " ", "DV1", " ", "phi1R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn2", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi2L", " ", "DV2", " ", "phi2R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Smn1", "=", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"m", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Smn12", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi1L", " ", "phi2R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Smn21", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi2L", " ", "phi1R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Smn2", "=", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"m", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Smat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{"Smn1", "+", "Smn21", "+", "Smn12", "+", "Smn2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Hmat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{"Vmn1", "+", "Vmn21", "+", "Vmn12", "+", "Vmn2", "+", 
           RowBox[{"E0", " ", 
            RowBox[{"Smat", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Ei", " ", "=", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"{", 
      RowBox[{"Hmat", ",", "Smat"}], "}"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.762932038664549*^9, 3.7629320948880033`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.76293211007099*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-5.3216086797886435`\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(6.93890258930366`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.711735392817831`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.762932110585532*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({5.3216086797886435`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(6.93890258930366`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.711735392817831`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.762932110677599*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-5.3216086797886435`\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(-1.3010426069826053`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(8.819391933389319`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.762932110758724*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.762932110782174*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "19.9482296773016`", ",", "12.81787811496798`", ",", "9.81522138161274`", 
   ",", "8.127594858009296`", ",", "6.580305538646661`", ",", 
   "5.138113090539172`", ",", "3.8430445505877437`", ",", 
   "2.714640291454294`", ",", "1.8395115715345332`", ",", 
   "1.2695259439394897`", ",", "0.4761877833862154`"}], "}"}]], "Output",
 CellChangeTimes->{3.762932129170165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", 
  RowBox[{"{", 
   RowBox[{"Hmat", ",", "Smat"}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.016637263808140908`"}], ",", 
     RowBox[{"-", "0.049579167777812065`"}], ",", 
     RowBox[{"-", "0.09501257003957578`"}], ",", 
     RowBox[{"-", "0.15440462060720458`"}], ",", 
     RowBox[{"-", "0.1511708186849194`"}], ",", 
     RowBox[{"-", "0.21115041665753462`"}], ",", "0.041469023969749295`", ",", 
     RowBox[{"-", "0.1902865137694645`"}], ",", "0.4938857607422994`", ",", 
     RowBox[{"-", "0.21399025909261793`"}], ",", "0.7545304529616235`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01992874568178106`", ",", "0.05439691152556679`", ",", 
     "0.12651911991301157`", ",", "0.13796118031915075`", ",", 
     "0.296786757719946`", ",", "0.010294488519167993`", ",", 
     "0.3758615203318642`", ",", 
     RowBox[{"-", "0.3716519987909172`"}], ",", "0.12809017633237374`", ",", 
     RowBox[{"-", "0.3473974935202581`"}], ",", 
     RowBox[{"-", "0.6759629336236895`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.018160867106710967`", ",", "0.0634518425845376`", ",", 
     "0.0963592000554613`", ",", "0.23786570220282652`", ",", 
     "0.09706650814722108`", ",", "0.38667666804871337`", ",", 
     RowBox[{"-", "0.11994736752258661`"}], ",", "0.20617559053716966`", ",", 
     RowBox[{"-", "0.08409439852138374`"}], ",", 
     RowBox[{"-", "0.7198060270975806`"}], ",", 
     RowBox[{"-", "0.43445342284761934`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.01462595823093415`"}], ",", 
     RowBox[{"-", "0.02527882908803478`"}], ",", 
     RowBox[{"-", "0.1238697617210614`"}], ",", 
     RowBox[{"-", "0.012556214527601058`"}], ",", 
     RowBox[{"-", "0.3395778497334732`"}], ",", "0.14658357056183433`", ",", 
     RowBox[{"-", "0.4608007349758708`"}], ",", 
     RowBox[{"-", "0.17787049886318124`"}], ",", "0.5978734645611407`", ",", 
     "0.48512177815520985`", ",", "0.10037318156982854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0028577094040006146`", ",", "0.05528349888348409`", ",", 
     RowBox[{"-", "0.03657472031302248`"}], ",", "0.24632601280616187`", ",", 
     RowBox[{"-", "0.2456107079411086`"}], ",", "0.6077725592210843`", ",", 
     "0.3256792165624429`", ",", 
     RowBox[{"-", "0.443180944348602`"}], ",", 
     RowBox[{"-", "0.41477964443041043`"}], ",", 
     RowBox[{"-", "0.16358158260449895`"}], ",", 
     RowBox[{"-", "0.06270455138242041`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.020763126275082904`", ",", 
     RowBox[{"-", "0.03732388450178212`"}], ",", "0.1556604736401015`", ",", 
     RowBox[{"-", "0.3007420253320336`"}], ",", "0.694693067897401`", ",", 
     "0.37566145273518575`", ",", 
     RowBox[{"-", "0.3061638291099373`"}], ",", 
     RowBox[{"-", "0.32203916332822324`"}], ",", 
     RowBox[{"-", "0.1952399577547127`"}], ",", 
     RowBox[{"-", "0.14282351860387746`"}], ",", 
     RowBox[{"-", "0.0617832839823186`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.025291650180123575`", ",", 
     RowBox[{"-", "0.07193700798821359`"}], ",", "0.3088269372616704`", ",", 
     RowBox[{"-", "0.7715427485701923`"}], ",", 
     RowBox[{"-", "0.32819498699413935`"}], ",", "0.2425823571611`", ",", 
     "0.25127433552862377`", ",", "0.19637691851358466`", ",", 
     "0.16309526734346164`", ",", "0.08934158126402571`", ",", 
     "0.0262733624883867`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.019099578609514282`"}], ",", "0.2080178119727735`", ",", 
     RowBox[{"-", "0.836894874617661`"}], ",", 
     RowBox[{"-", "0.16843999479883992`"}], ",", "0.26626346316206684`", ",", 
     "0.23920897812430958`", ",", "0.21876985530907014`", ",", 
     "0.18711831324467607`", ",", "0.11465464363975236`", ",", 
     "0.055562955074798304`", ",", "0.01936811635742315`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03201378005034293`", ",", 
     RowBox[{"-", "0.6644174113244707`"}], ",", "0.2594803754978676`", ",", 
     "0.44106046193178416`", ",", "0.33385057569583054`", ",", 
     "0.3000941533350022`", ",", "0.24101528005236317`", ",", 
     "0.15820098052414636`", ",", "0.09289497361351386`", ",", 
     "0.04659398758202078`", ",", "0.01520283034588516`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18701265225339578`", ",", 
     RowBox[{"-", "0.7853472529734097`"}], ",", 
     RowBox[{"-", "0.44602543439004444`"}], ",", 
     RowBox[{"-", "0.2478475783004354`"}], ",", 
     RowBox[{"-", "0.21611744594896995`"}], ",", 
     RowBox[{"-", "0.15677283671152326`"}], ",", 
     RowBox[{"-", "0.10180364184435982`"}], ",", 
     RowBox[{"-", "0.06650580686656353`"}], ",", 
     RowBox[{"-", "0.03832775663385642`"}], ",", 
     RowBox[{"-", "0.01777916903790345`"}], ",", 
     RowBox[{"-", "0.005679573747892565`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.983298973883376`", ",", "0.162716783483837`", ",", 
     "0.04614512122641783`", ",", "0.058271677467015295`", ",", 
     "0.02781649546200192`", ",", "0.013673524039525695`", ",", 
     "0.010550598957585379`", ",", "0.006161644520495309`", ",", 
     "0.0029832709012212527`", ",", "0.0014972466388371`", ",", 
     "0.0005199913248400211`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.762932166503622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Calc", ".", " ", "of"}], " ", "the", " ", "lowest", " ", 
     "energy", " ", "levels", " ", "by", " ", "diagonalizing", " ", "Hmat", 
     " ", "in", " ", "the", " ", "antisymmetrized", " ", "double"}], "-", 
    RowBox[{"well", " ", "basis"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"z", "^", "2"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "/", "2"}], ")"}], "^", "2"}]}], ")"}], "^", "2"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"d", "^", "2"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z1", "=", 
     RowBox[{
      RowBox[{"d", "/", "2"}], "+", "z"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z2", "=", 
     RowBox[{
      RowBox[{"d", "/", "2"}], "-", "z"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vho1", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{"z1", "^", "2"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vho2", "=", 
     RowBox[{
      RowBox[{"om", "^", "2"}], 
      RowBox[{
       RowBox[{"z2", "^", "2"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DV1", "=", 
     RowBox[{"V", "-", "Vho1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DV2", "=", 
     RowBox[{"V", "-", "Vho2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"nmax", "=", "10"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hmat", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Smat", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"j", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "=", 
          RowBox[{"i", "-", "1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi1L", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z1", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"m", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z1"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "m"}], " ", 
              RowBox[{"m", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi1R", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z1", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"n", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z1"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", 
              RowBox[{"n", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi2L", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z2", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"m", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z2"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "m"}], " ", 
              RowBox[{"m", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi2R", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"om", "/", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "om"}], " ", 
             RowBox[{
              RowBox[{"z2", "^", "2"}], "/", "2"}]}], "]"}], 
           RowBox[{
            RowBox[{"HermiteH", "[", 
             RowBox[{"n", ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", "om", "]"}], "z2"}]}], "]"}], "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", 
              RowBox[{"n", "!"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"E0", "=", 
          RowBox[{"om", 
           RowBox[{"(", 
            RowBox[{"n", "+", 
             RowBox[{"1", "/", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn1", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi1L", " ", "DV1", " ", "phi1R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn12", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi1L", " ", "DV2", " ", "phi2R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn21", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi2L", " ", "DV1", " ", "phi1R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Vmn2", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi2L", " ", "DV2", " ", "phi2R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Smn1", "=", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"m", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Smn12", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi1L", " ", "phi2R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Smn21", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"phi2L", " ", "phi1R"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Smn2", "=", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"m", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Smat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{"Smn1", "-", "Smn21", "-", "Smn12", "+", "Smn2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Hmat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{"Vmn1", "-", "Vmn21", "-", "Vmn12", "+", "Vmn2", "+", 
           RowBox[{"E0", " ", 
            RowBox[{"Smat", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Ei", " ", "=", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"{", 
      RowBox[{"Hmat", ",", "Smat"}], "}"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7629324399885874`*^9, 3.7629324709487934`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.762932473443046*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-5.3216086797886435`\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(6.93890258930366`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.711735392817831`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7629324739138613`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({5.3216086797886435`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(6.93890258930366`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.711735392817831`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.762932474011955*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(z\\)\
\[NoBreak] near \[NoBreak]\\!\\({z}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-5.3216086797886435`\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(-1.3010426069826053`*^-18\\)\[NoBreak] and \
\[NoBreak]\\!\\(8.819391933389319`*^-17\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7629324740972548`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.762932474123141*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "20.908552050542454`", ",", "13.607468386667975`", ",", 
   "10.661522811403808`", ",", "8.941227805084598`", ",", 
   "7.335111058787323`", ",", "5.836441217529446`", ",", "4.471138148987998`",
    ",", "3.2546866895718964`", ",", "2.218612623432796`", ",", 
   "1.351398905726142`", ",", "0.47813128591721454`"}], "}"}]], "Output",
 CellChangeTimes->{3.7629324920413427`*^9}]
}, Open  ]]
},
WindowSize->{803, 681},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 4084, 107, 252, "Input"],
Cell[4666, 131, 30480, 507, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35183, 643, 5763, 157, 352, "Input"],
Cell[40949, 802, 558, 8, 31, "Output"],
Cell[41510, 812, 885, 17, 56, "Message"],
Cell[42398, 831, 888, 17, 58, "Message"],
Cell[43289, 850, 886, 17, 58, "Message"],
Cell[44178, 869, 606, 13, 21, "Message"],
Cell[44787, 884, 905, 15, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45729, 904, 11674, 315, 772, "Input"],
Cell[57406, 1221, 1455, 21, 31, "Output"],
Cell[58864, 1244, 882, 16, 56, "Message"],
Cell[59749, 1262, 877, 16, 56, "Message"],
Cell[60629, 1280, 887, 16, 58, "Message"],
Cell[61519, 1298, 606, 12, 21, "Message"],
Cell[62128, 1312, 2118, 33, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64283, 1350, 3125, 98, 212, "Input"],
Cell[67411, 1450, 398, 5, 31, "Output"],
Cell[67812, 1457, 57811, 954, 240, "Output"],
Cell[125626, 2413, 37402, 618, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163065, 3036, 9318, 255, 652, "Input"],
Cell[172386, 3293, 70, 1, 31, "Output"],
Cell[172459, 3296, 811, 15, 56, "Message"],
Cell[173273, 3313, 804, 15, 56, "Message"],
Cell[174080, 3330, 814, 15, 58, "Message"],
Cell[174897, 3347, 533, 11, 21, "Message"],
Cell[175433, 3360, 413, 8, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175883, 3373, 118, 3, 31, "Input"],
Cell[176004, 3378, 5255, 104, 432, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181296, 3487, 9324, 255, 652, "Input"],
Cell[190623, 3744, 71, 1, 31, "Output"],
Cell[190697, 3747, 813, 15, 56, "Message"],
Cell[191513, 3764, 804, 15, 56, "Message"],
Cell[192320, 3781, 816, 15, 58, "Message"],
Cell[193139, 3798, 533, 11, 21, "Message"],
Cell[193675, 3811, 419, 8, 84, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
